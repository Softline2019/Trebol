@page "/"
@rendermode InteractiveServer

@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using SoftLine.Trebol.Application.Features.Auths.Users.Commands.LoginUser
@using Microsoft.JSInterop
@inject HttpClient Http
@inject IJSRuntime JS

<PageTitle>Login</PageTitle>


<div class="mb-2">
    <label for="email" class="form-label">Email</label>
    <InputText id="Email" class="form-control" @bind-Value="@loginModel.Email"></InputText>
</div>

<div class="mb-3">
    <label for="password" class="form-label">Password</label>
    <InputText id="password" type="password" class="form-control" @bind-Value="@loginModel.Password" />
</div>

<div class="mb-3">
    <label for="idCompany" class="form-label">Company ID</label>
    <InputNumber id="idCompany" class="form-control" @bind-Value="@loginModel.IdCompany" />
</div>

<button class="btn btn-primary" @onclick="HandleLogin">Login</button>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private LoginUserCommand loginModel = new LoginUserCommand();
    private string? errorMessage;
    private string? successMessage;

    private async Task HandleLogin()
    {
        var api = "https://localhost:7051";

        errorMessage = null;
        successMessage = null;

        try
        {
            var response = await Http.PostAsJsonAsync($"{api}/api/Auth/login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                var authResponse = await response.Content.ReadFromJsonAsync<AuthResponse>();
                await JS.InvokeVoidAsync("localStorage.setItem", "authToken", authResponse.Token);
                successMessage = "Se logueó correctamente";
            }
            else
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                //errorMessage = $"Falló la conexión: {responseContent}";
                errorMessage = $"por favor verifique su clave o contrasena";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Ocurrió un error: {ex.Message}";
        }
    }

    private class AuthResponse
    {
        public string? Token { get; set; }
    }
}
